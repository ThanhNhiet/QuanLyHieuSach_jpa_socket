
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Gui;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.reflect.Type;
import java.net.Socket;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Pattern;

import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.InstanceCreator;
import com.google.gson.reflect.TypeToken;

import dao.NhaCungCapDAO;

import dao.VppDao;
import entity.NhaCungCap;
import entity.Sach;
import entity.VPP;

/**
 *
 * @author LENOVO
 */
public class Tab_VPP extends javax.swing.JPanel {
	private Socket socket;
	PrintWriter out;
	Scanner sc;

	/**
	 * Creates new form Tab_Sach
	 */
	public Tab_VPP(Socket socket) {
		initComponents();
		try {
			out = new PrintWriter(socket.getOutputStream(), true);
			sc = new Scanner(socket.getInputStream());
		} catch (Exception e) {
			e.printStackTrace();
		}
		this.socket = socket;
		loadtableVpp();
	}

	public void loadtableVpp() {
		clearTableSach();
		try {
			out.println("QLBH");
			out.println("getAllVPP");
			DefaultTableModel dtm = (DefaultTableModel) jTable_Sach.getModel();

			String listObject = sc.nextLine();
			InstanceCreator<VPP> sachInstanceCreator = new InstanceCreator<VPP>() {
				@Override
				public VPP createInstance(Type type) {
					return new VPP();
				}
			};
			Gson gsonSach = new GsonBuilder().registerTypeAdapter(VPP.class, sachInstanceCreator).create();

			List<VPP> listSach = gsonSach.fromJson(listObject, new TypeToken<List<VPP>>() {
			}.getType());
			for (VPP s : listSach) {

				Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), s.getHinhAnh(),
						s.getXuatXu(), s.getMauSac(), s.getChatLieu(), s.getSoLuongTK(), s.getDonGiaBan() };
				dtm.addRow(rowData);

			}
			Object[] rowData2 = {"", "", "", "", "", "", "", "", ""};
			dtm.addRow(rowData2);
		} catch (Exception e) {
			e.printStackTrace();
		}
		out.flush();
	}

	public void TimKiem() {
		jTable_Sach.clearSelection();
		clearTableSach();
		DefaultTableModel dtm = (DefaultTableModel) jTable_Sach.getModel();
		String timKiem = "";
		if (txtTimKiem.getText().length() > 0) {
			timKiem = txtTimKiem.getText();
		}
		try {
			out.println("QLBH");
			out.println("getAllVPP");
			String listObject = sc.nextLine();
			InstanceCreator<VPP> sachInstanceCreator = new InstanceCreator<VPP>() {
				@Override
				public VPP createInstance(Type type) {
					return new VPP();
				}
			};
			Gson gsonSach = new GsonBuilder().registerTypeAdapter(VPP.class, sachInstanceCreator).create();

			List<VPP> listSach = gsonSach.fromJson(listObject, new TypeToken<List<VPP>>() {
			}.getType());
			for (VPP s : listSach) {

				if (s.getMaSP().toLowerCase().contains(timKiem.toLowerCase())
						|| s.getTenSP().toLowerCase().contains(timKiem.toLowerCase())
						|| s.getNhaCungCap().getTenNCC().contains(timKiem.toLowerCase())

				) {
					Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), s.getHinhAnh(),
							s.getXuatXu(), s.getMauSac(), s.getChatLieu(), s.getSoLuongTK(), s.getDonGiaBan() };
					dtm.addRow(rowData);
				}
			}
			Object[] rowData2 = {"", "", "", "", "", "", "", "", ""};
			dtm.addRow(rowData2);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		out.flush();
	}

	public void clearTableSach() {
		DefaultTableModel dtm = (DefaultTableModel) jTable_Sach.getModel();
		dtm.setRowCount(0);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel2 = new javax.swing.JPanel();
		jPanel1 = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		txtTimKiem = new javax.swing.JTextField();
		txtDonGiaBan = new javax.swing.JTextField();
		txtXuatXu = new javax.swing.JTextField();
		txtSoLuong = new javax.swing.JTextField();
		btnTimKiem = new javax.swing.JButton();
		btnXuatExcel = new javax.swing.JButton();
		jLabel10 = new javax.swing.JLabel();
		btnChonAnh = new javax.swing.JButton();
		jLabel9 = new javax.swing.JLabel();
		txtTenSP = new javax.swing.JTextField();
		jLabel11 = new javax.swing.JLabel();
		jTextField8 = new javax.swing.JTextField();
		jLabel12 = new javax.swing.JLabel();
		cbxMau = new javax.swing.JComboBox<>();
		jLabel13 = new javax.swing.JLabel();
		cbxNhaCungCap = new javax.swing.JComboBox<>();
		jLabel14 = new javax.swing.JLabel();
		txtMaSP = new javax.swing.JTextField();
		cbxChatLieu = new javax.swing.JComboBox<>();
		pnHinhAnh = new javax.swing.JPanel();
		lblHinhAnh = new javax.swing.JLabel();
		btnLuu = new javax.swing.JButton();
		btnLuu.setEnabled(false);

		btnXoaTrang = new javax.swing.JButton();
		btnSua = new javax.swing.JButton();
		btnThem = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable_Sach = new javax.swing.JTable();
		jLabel2 = new javax.swing.JLabel();

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));
		jPanel2.setPreferredSize(new java.awt.Dimension(1260, 530));
		jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jPanel1.setBackground(new java.awt.Color(255, 255, 255));
		jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
		jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel3.setText("NHÀ CUNG CẤP:");
		jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 140, 40));

		jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel4.setText("ĐƠN GIÁ:");
		jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 140, 40));

		jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel6.setText("TÊN SẢN PHẨM:");
		jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 140, 40));

		jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel7.setText("XUẤT XỨ:");
		jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 140, 40));

		jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel8.setText("SỐ LƯỢNG:");
		jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 140, 40));

		txtTimKiem.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
		txtTimKiem.setToolTipText("");
		jPanel1.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 340, 40));
		jPanel1.add(txtDonGiaBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 260, 40));
		jPanel1.add(txtXuatXu, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 260, 40));
		jPanel1.add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, 260, 40));

		btnTimKiem.setBackground(new java.awt.Color(255, 153, 0));
		btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
		btnTimKiem.setText("TÌM KIẾM");
		btnTimKiem.setBorder(null);
		btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTimKiemActionPerformed(evt);
			}
		});
		jPanel1.add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, 110, 40));

		btnXuatExcel.setBackground(new java.awt.Color(102, 255, 102));
		btnXuatExcel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		btnXuatExcel.setForeground(new java.awt.Color(255, 255, 255));
		btnXuatExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/icons8_ms_excel_30px.png"))); // NOI18N
		btnXuatExcel.setText("XUẤT EXCEL");
		btnXuatExcel.setBorder(null);
		btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXuatExcelActionPerformed(evt);
			}
		});
		jPanel1.add(btnXuatExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 210, 180, 40));

		jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel10.setForeground(new java.awt.Color(255, 153, 0));
		jLabel10.setText("Tìm kiếm:");
		jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 70, 40));

		btnChonAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/btnFile.png"))); // NOI18N
		btnChonAnh.setBorder(null);
		btnChonAnh.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		jPanel1.add(btnChonAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 210, 200, 40));

		jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel9.setText("MÃ SẢN PHẨM:");
		jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 140, 40));
		jPanel1.add(txtTenSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 260, 40));

		jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel11.setText("ĐƠN GIÁ:");
		jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 140, 40));
		jPanel1.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 260, 40));

		jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel12.setText("SỐ LƯỢNG:");
		jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 140, 40));

		cbxMau.setModel(new javax.swing.DefaultComboBoxModel<>(
				new String[] { "Đỏ", "Xanh", "Vàng", "Trắng", "Hồng", "Tím", "Be", "Đen", "Cam", "Bạc" }));
		cbxMau.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox4ActionPerformed(evt);
			}
		});
		jPanel1.add(cbxMau, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 260, 40));

		jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel13.setText("MÀU SẮC");
		jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 140, 40));

		cbxNhaCungCap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhà xuất bản Giáo Dục",
				"Cty Phương Nam", "Phanbook", "Cty Văn Hóa & Truyền Thông Trí Việt", "Huy Hoang Bookstore",
				"Thiên Long", "MORNING GLORY CORP", "Cty VPP Hồng Hà", "Cty Giấy Hải Tiến", "Vận Tải Quốc Anh",
				"Cty TM Hạnh Thuận" }));
		cbxNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox5ActionPerformed(evt);
			}
		});
		jPanel1.add(cbxNhaCungCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 260, 40));

		jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel14.setText("CHẤT LIỆU:");
		jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 140, 40));

		txtMaSP.setEditable(false);
		jPanel1.add(txtMaSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 260, 40));

		cbxChatLieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kim loại", "Nhựa", "Giấy", "Gỗ" }));
		cbxChatLieu.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox6ActionPerformed(evt);
			}
		});
		jPanel1.add(cbxChatLieu, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, 260, 40));

		pnHinhAnh.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		lblHinhAnh.setBackground(new java.awt.Color(204, 255, 255));
		lblHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		lblHinhAnh.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 153, 0), null));
		pnHinhAnh.add(lblHinhAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 190));

		jPanel1.add(pnHinhAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 240, 190));

		btnLuu.setBackground(new java.awt.Color(0, 255, 255));
		btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnLuu.setForeground(new java.awt.Color(255, 255, 255));
		btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/check-icon.png"))); // NOI18N
		btnLuu.setText("LƯU");
		btnLuu.setBorder(null);
		btnLuu.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLuuActionPerformed(evt);
			}
		});
		jPanel1.add(btnLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 210, 120, 40));

		btnXoaTrang.setBackground(new java.awt.Color(102, 255, 102));
		btnXoaTrang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnXoaTrang.setForeground(new java.awt.Color(255, 255, 255));
		btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Refresh-icon.png"))); // NOI18N
		btnXoaTrang.setText("LÀM MỚI");
		btnXoaTrang.setBorder(null);
		btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXoaTrangActionPerformed(evt);
			}
		});
		jPanel1.add(btnXoaTrang, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 110, 120, 40));

		btnSua.setBackground(new java.awt.Color(153, 255, 204));
		btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnSua.setForeground(new java.awt.Color(255, 255, 255));
		btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/icons8_maintenance_30px.png"))); // NOI18N
		btnSua.setText("SỬA");
		btnSua.setBorder(null);
		btnSua.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSuaActionPerformed(evt);
			}
		});
		jPanel1.add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 60, 120, 40));

		btnThem.setBackground(new java.awt.Color(255, 102, 102));
		btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnThem.setForeground(new java.awt.Color(255, 255, 255));
		btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Add-icon.png"))); // NOI18N
		btnThem.setText("THÊM");
		btnThem.setBorder(null);
		btnThem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemActionPerformed(evt);
			}
		});
		jPanel1.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 10, 120, 40));

		jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1260, 270));

		jTable_Sach.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "MÃ SẢN PHẨM", "TÊN SẢN PHẨM", "NHÀ CUNG CẤP", "HÌNH ẢNH", "XUẤT XỨ", "MÀU SẮC",
				"CHẤT LIỆU", "SỐ LƯỢNG", "ĐƠN GIÁ" }));
		jScrollPane1.setViewportView(jTable_Sach);
		jTable_Sach.setShowHorizontalLines(true);
		jTable_Sach.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jtable_SachMousePressed(evt);
			}

		});

		jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 1260, 220));

		jLabel2.setBackground(new java.awt.Color(255, 255, 255));
		jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(255, 51, 0));
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("QUẢN LÝ VĂN PHÒNG PHẨM");
		jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1260, 40));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 1260, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
										.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1259,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(0, 0, Short.MAX_VALUE))));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 530, Short.MAX_VALUE)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
								.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE))));
//        napDuLieuComBoBoxNhaCungCap(ncc_dao.getAllNhaCungCap());
//        napDuLieuCSDLVpp(vpp_dao.getAllVPP());
	}// </editor-fold>//GEN-END:initComponents

//	public void napDuLieuComBoBoxNhaCungCap(ArrayList<NhaCungCap> ds) {
//		int n = ds.size();
//		String items[] = new String[n];
//		int i = 0;
//		for (NhaCungCap ncc : ds) {
//			items[i] = ncc.getTenNCC() + "";
//			i++;
//		}
//		cbxNhaCungCap.setModel(new DefaultComboBoxModel<String>(items));
//	}

//	public void napDuLieuCSDLVpp(ArrayList<VPP> listVPP) {
//		model = (DefaultTableModel) jTable_Sach.getModel();
//		model.getDataVector().removeAllElements();
//		for (VPP vpp : listVPP) {
//			Object[] rowdata = { vpp.getMaSP(), vpp.getTenSP(), vpp.getNhaCungCap().getTenNCC(), vpp.getHinhAnh(),
//					vpp.getXuatXu(), vpp.getMauSac(), vpp.getChatLieu(), vpp.getSoLuongTK(), vpp.getDonGiaBan() };
//			model.addRow(rowdata);
//		}
//	}

//	public void timTheoTenVPP() {
//    	String ma =txtTimKiem.getText().trim();
////    	VPP vpp =vpp_dao.timVPPTheoTen(ma);
//    	if(vpp != null) {
//    		DefaultTableModel model =(DefaultTableModel) jTable_Sach.getModel();
//    		model.getDataVector().removeAllElements();
//    		Object[] rowData= {vpp.getMaSP(),vpp.getTenSP(),vpp.getNhaCungCap().getTenNCC(),vpp.getHinhAnh(),vpp.getXuatXu(),vpp.getMauSac(),vpp.getChatLieu(),vpp.getSoLuongTK(),vpp.getDonGiaBan()};
//        	model.addRow(rowData);
//    	}else {
//    		JOptionPane.showMessageDialog(this,"Không tìm thấy");
//    	}
//    }
	public void xoaTrang() {
		txtMaSP.setText("");
		txtTenSP.setText("");
		txtDonGiaBan.setText("");
		txtSoLuong.setText("");
		txtXuatXu.setText("");
		cbxChatLieu.setSelectedIndex(0);
		cbxMau.setSelectedIndex(0);
		cbxNhaCungCap.setSelectedIndex(0);
		lblHinhAnh.setIcon(new ImageIcon());
	}

	public ImageIcon ResizeImage(String imgPath) {
		ImageIcon myImage = new ImageIcon(imgPath);
		Image img = myImage.getImage();

		Image newImg = img.getScaledInstance(pnHinhAnh.getWidth(), pnHinhAnh.getHeight(), Image.SCALE_SMOOTH);
		ImageIcon image = new ImageIcon(newImg);
		return image;
	}

	private void jtable_SachMousePressed(java.awt.event.MouseEvent evt) {
		String id = (String) jTable_Sach.getValueAt(jTable_Sach.getSelectedRow(), 0);

		try {
			PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
			pw.println("QLSP");
			pw.println("getVppID");
			pw.println(id);

			Scanner sc = new Scanner(socket.getInputStream());
			String nhanVien = sc.nextLine();
			InstanceCreator<VPP> sachInstanceCreator = new InstanceCreator<VPP>() {
				@Override
				public VPP createInstance(Type type) {
					return new VPP();
				}
			};
			Gson gsonSach = new GsonBuilder().registerTypeAdapter(VPP.class, sachInstanceCreator).create();
			VPP vpp = gsonSach.fromJson(nhanVien, new TypeToken<VPP>() {
			}.getType());
			if (nhanVien.equals("null")) {
				System.out.println("Không tìm thấy vpp");
				return;
			}

			txtMaSP.setText(vpp.getMaSP());
			txtTenSP.setText(vpp.getTenSP());
			cbxNhaCungCap.setSelectedItem(vpp.getNhaCungCap().getTenNCC());
			txtXuatXu.setText(vpp.getXuatXu());
			cbxMau.setSelectedItem(vpp.getMauSac());
			cbxChatLieu.setSelectedItem(vpp.getChatLieu());
			txtSoLuong.setText(String.valueOf(vpp.getSoLuongTK()));
			txtDonGiaBan.setText(String.valueOf(vpp.getDonGiaBan()));

			file = new File("");
			String path = file.getAbsolutePath();
			lblHinhAnh.setIcon(ResizeImage(path + "/src/main/java/Img/SanPham/" + vpp.getHinhAnh()));
			file = new File(vpp.getHinhAnh());
		} catch (IOException e) {
			throw new RuntimeException(e);
		}

	}

	private static String[] Columns = { "MÃ SẢN PHẨM", "TÊN SẢN PHẨM", "NHÀ CUNG CẤP", "HÌNH ẢNH", "XUẤT XỨ",
			"MÀU SẮC", "CHẤT LIỆU", "SỐ LƯỢNG", "ĐƠN GIÁ" };

	private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn2ActionPerformed
		// TODO add your handling code here:
		XSSFWorkbook excelJTableExport = new XSSFWorkbook();
		XSSFSheet excelSheet = excelJTableExport.createSheet("Danh sách sản phẩm Văn phòng phẩm");
		BufferedOutputStream excelBos = null;
		try {
			// Chọn nơi lưu
			JFileChooser excelFileChooser = new JFileChooser();
			// Tiêu đề ô save
			excelFileChooser.setDialogTitle("Save As ..");
			// Định dạng chỉ xls, xlsx, xlsm files
			FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "xlsm");
			excelFileChooser.setFileFilter(fnef);
			int chooser = excelFileChooser.showSaveDialog(null);
			XSSFCell excelCell = null;
			if (chooser == JFileChooser.APPROVE_OPTION) {
				XSSFRow excelRow = excelSheet.createRow(0);
				for (int j = 0; j < jTable_Sach.getColumnCount(); j++) {
					excelCell = excelRow.createCell(j);
					excelCell.setCellValue(Columns[j]);
				}
				for (int i = 1; i <= jTable_Sach.getRowCount(); i++) {
					excelRow = excelSheet.createRow(i);
					for (int j = 0; j < jTable_Sach.getColumnCount(); j++) {
						excelCell = excelRow.createCell(j);
						excelCell.setCellValue(jTable_Sach.getValueAt(i - 1, j).toString());
					}
				}
				FileOutputStream excelFos = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
				excelBos = new BufferedOutputStream(excelFos);
				excelJTableExport.write(excelBos);
				JOptionPane.showMessageDialog(null, "Xuất danh sản phẩm Văn phòng phẩm thành công");
			}
		} catch (FileNotFoundException ex) {
			JOptionPane.showMessageDialog(null, ex);
		} catch (IOException ex) {
			JOptionPane.showMessageDialog(null, ex);
		} finally {
			try {
				if (excelBos != null) {
					excelBos.close();
				}
				if (excelJTableExport != null) {
					excelJTableExport.close();
				}
			} catch (IOException ex) {
				JOptionPane.showMessageDialog(null, ex);
			}
		}
	}// GEN-LAST:event_btn2ActionPerformed

	private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn1ActionPerformed
		TimKiem();
	}// GEN-LAST:event_btn1ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		JFileChooser filechoose = new JFileChooser("src\\main\\java\\Img\\SanPham");
		FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("hinhAnh", "jpg", "png");
		filechoose.setFileFilter(imageFilter);
		filechoose.setMultiSelectionEnabled(false);

		int x = filechoose.showDialog(this, "Chọn Ảnh");
		if (x == JFileChooser.APPROVE_OPTION) {
			file = filechoose.getSelectedFile();
			lblHinhAnh.setText("");
			lblHinhAnh.setIcon(ResizeImage(file.getAbsolutePath()));

		}
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox4ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jComboBox4ActionPerformed

	private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox5ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jComboBox5ActionPerformed

	private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox6ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jComboBox6ActionPerformed

	private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn4ActionPerformed
		if (btnThem.getText().equalsIgnoreCase("Hủy")) {
			themSanPham();
		}
		else if (btnSua.getText().equalsIgnoreCase("Hủy")) {
			updateSanPham();
		}
	}// GEN-LAST:event_btn4ActionPerformed

	private void btnReSetActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn6ActionPerformed
		// TODO add your handling code here:
//    	napDuLieuCSDLVpp(vpp_dao.getAllVPP());
	}// GEN-LAST:event_btn6ActionPerformed

	private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn5ActionPerformed
		// TODO add your handling code here:
		xoaTrang();
	}// GEN-LAST:event_btn5ActionPerformed

	private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn8ActionPerformed
		// TODO add your handling code here:
		if (jTable_Sach.getSelectedRow() == -1) {
			JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng để sửa");
		} else {
			if (btnSua.getText().equalsIgnoreCase("Sửa")) {
				btnChonAnh.setEnabled(true);
				btnLuu.setEnabled(true);
				btnThem.setEnabled(false);
				btnXoaTrang.setEnabled(false);
				btnSua.setText("Hủy");
			} else if (btnSua.getText().equalsIgnoreCase("Hủy")) {
				btnChonAnh.setEnabled(false);
				btnLuu.setEnabled(false);
				btnThem.setEnabled(true);
				btnXoaTrang.setEnabled(true);
				btnSua.setText("Sửa");
				xoaTrang();
				jTable_Sach.clearSelection();
				lblHinhAnh.setIcon(new ImageIcon());
			}
		}
	}// GEN-LAST:event_btn8ActionPerformed

	private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn3ActionPerformed
		// TODO add your handling code here:
		if (btnThem.getText().equalsIgnoreCase("Thêm")) {
			xoaTrang();
			btnChonAnh.setEnabled(true);
			btnLuu.setEnabled(true);
			btnThem.setText("Hủy");
			btnSua.setEnabled(false);
			btnXoaTrang.setEnabled(false);
			txtSoLuong.setText("0");
			txtDonGiaBan.setText("0");
			txtSoLuong.setEnabled(false);
			txtDonGiaBan.setEnabled(true);
			out.println("QLSP");
			out.println("autoIDVPP");
			String id = sc.nextLine();
			txtMaSP.setText(id);
		} else if (btnThem.getText().equalsIgnoreCase("Hủy")) {
			btnThem.setText("Thêm");
			txtMaSP.setText("");
			btnSua.setEnabled(true);
			btnXoaTrang.setEnabled(true);
			btnChonAnh.setEnabled(false);
			btnLuu.setEnabled(false);
			lblHinhAnh.setIcon(null);
			txtSoLuong.setEnabled(true);
			txtDonGiaBan.setEnabled(true);
		}
	}// GEN-LAST:event_btn3ActionPerformed

	private void themSanPham() {
		try {
			out.println("QLSP");
			out.println("addVPP");

			String tenSP = txtTenSP.getText().trim();
			out.println(tenSP);

			String ncc = cbxNhaCungCap.getSelectedItem().toString();
			out.println(ncc);
			
			double donGia = Double.parseDouble(txtDonGiaBan.getText());
			out.println(donGia);

			String hinhAnh = "";
			if (file != null) {
				hinhAnh = file.getName();
				out.println(hinhAnh);
			} else if (file == null) {
				out.println("");
			}

			String xuatXu = txtXuatXu.getText().trim();
			out.println(xuatXu);
			
			String mau = cbxMau.getSelectedItem().toString();
			out.println(mau);
			
			String chatLieu = cbxChatLieu.getSelectedItem().toString();
			out.println(chatLieu);
			
			String response = sc.nextLine();
			JOptionPane.showMessageDialog(null, response);

			loadtableVpp();
			xoaTrang();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private void updateSanPham() {
		try {
			out.println("QLSP");
			out.println("updateVPP");

			String maSP = txtMaSP.getText().trim();
			out.println(maSP);
			
			String tenSP = txtTenSP.getText().trim();
			out.println(tenSP);

			String ncc = cbxNhaCungCap.getSelectedItem().toString();
			out.println(ncc);
			
			double donGia = Double.parseDouble(txtDonGiaBan.getText());
			out.println(donGia);

			String hinhAnh = "";
			if (file != null) {
				hinhAnh = file.getName();
				out.println(hinhAnh);
			} else if (file == null) {
				out.println("");
			}

			String xuatXu = txtXuatXu.getText().trim();
			out.println(xuatXu);
			
			String mau = cbxMau.getSelectedItem().toString();
			out.println(mau);
			
			String chatLieu = cbxChatLieu.getSelectedItem().toString();
			out.println(chatLieu);
			
			String soLuong = txtSoLuong.getText();
			out.println(soLuong);
			
			String response = sc.nextLine();
			JOptionPane.showMessageDialog(null, response);

			loadtableVpp();
			xoaTrang();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

//    public VPP getDataOnTextField() {
//    	ncc_dao = new NhaCungCapDAO();
//    	String maSP=txtMaSP.getText().trim();
//    	String tenSP=txtTenSP.getText().trim();
//    	String xuatXu=txtXuatXu.getText().trim();
//    	int soLuong=Integer.parseInt(txtSoLuong.getText());
//    	double donGiaBan=Double.parseDouble(txtDonGiaBan.getText());
//    	String hinhAnh="";
//    	if (file != null) {
//            hinhAnh = file.getName();
//        }
//    	NhaCungCap nhaCungCap=ncc_dao.getNhaCungCapByName(cbxNhaCungCap.getSelectedItem().toString());
//    	String mau =cbxMau.getSelectedItem().toString();
//    	String chatLieu=cbxChatLieu.getSelectedItem().toString();
//    	VPP vpp = new VPP(maSP, tenSP, nhaCungCap, soLuong, donGiaBan, hinhAnh, xuatXu, mau, chatLieu);
//    	return vpp;
//    }
//    private static String removeAccent(String s) {
//
//        String temp = Normalizer.normalize(s, Normalizer.Form.NFD);
//        Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
//        return pattern.matcher(temp).replaceAll("");
//    }
//    public VPP kiemTraVPPTrung(VPP vpp) {
//    	vpp_dao=new VppDao();
//    	ArrayList<VPP> listVPP = new ArrayList<VPP>();
//    	listVPP=vpp_dao.getAllVPP();
//    	for(VPP vpp1 : listVPP) {
//    		if(removeAccent(vpp1.getTenSP()).equals(vpp.getTenSP())) {
//    			return vpp1;
//    		}
//    	}
//    	return null;
//    }
//	public void updateTableVPP(VPP vpp) {
//		int row = jTable_Sach.getSelectedRow();
//		DefaultTableModel model = (DefaultTableModel) jTable_Sach.getModel();
//		model.setValueAt(vpp.getMaSP(), row, 0);
//		model.setValueAt(vpp.getTenSP(), row, 1);
//		model.setValueAt(vpp.getNhaCungCap().getTenNCC(), row, 2);
//		model.setValueAt(vpp.getHinhAnh(), row, 3);
//		model.setValueAt(vpp.getXuatXu(), row, 4);
//		model.setValueAt(vpp.getMauSac(), row, 5);
//		model.setValueAt(vpp.getChatLieu(), row, 6);
//		model.setValueAt(vpp.getSoLuongTK(), row, 7);
//		model.setValueAt(vpp.getDonGiaBan(), row, 8);
//	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnTimKiem;
	private javax.swing.JButton btnXuatExcel;
	private javax.swing.JButton btnThem;
	private javax.swing.JButton btnLuu;
	private javax.swing.JButton btnXoaTrang;
	private javax.swing.JButton btnSua;
	private javax.swing.JButton btnChonAnh;
	private javax.swing.JComboBox<String> cbxMau;
	private javax.swing.JComboBox<String> cbxNhaCungCap;
	private javax.swing.JComboBox<String> cbxChatLieu;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel pnHinhAnh;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable_Sach;
	private javax.swing.JTextField txtMaSP;
	private javax.swing.JTextField txtTimKiem;
	private javax.swing.JTextField txtDonGiaBan;
	private javax.swing.JTextField txtTenSP;
	private javax.swing.JTextField txtXuatXu;
	private javax.swing.JTextField txtSoLuong;
	private javax.swing.JTextField jTextField8;
	private javax.swing.JLabel lblHinhAnh;
	private DefaultTableModel model;
	private File file = null;
//    private NhaCungCapDAO ncc_dao = new NhaCungCapDAO();
//    private VppDao vpp_dao = new VppDao();
//    private File file=null;
	// End of variables declaration//GEN-END:variables
}
