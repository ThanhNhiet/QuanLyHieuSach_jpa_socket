/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Gui;

import dao.SanPhamDAO;
import entity.HoaDon;
import entity.Sach;
import entity.SanPham;
import entity.VPP;

import java.io.PrintWriter;
import java.lang.reflect.Type;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.InstanceCreator;
import com.google.gson.reflect.TypeToken;

/**
 *
 * @author LENOVO
 */
public class Tab_SanPham extends javax.swing.JPanel {
	private Socket socket;

	PrintWriter out;
	Scanner sc;
//    SanPhamDAO sanPham_DAO = new SanPhamDAO();
	DefaultTableModel dtm = null;

	/**
	 * Creates new form QuanLyThongKe
	 */
	public Tab_SanPham(Socket socket) {
		initComponents();
		this.socket = socket;
		try {
			out = new PrintWriter(socket.getOutputStream(), true);
			sc = new Scanner(socket.getInputStream());
		} catch (Exception e) {
			e.printStackTrace();
		}
		loadTblSanPham();
	}

	public void clearTableSanPham() {
		dtm = (DefaultTableModel) jTableDSSP.getModel();
		dtm.setRowCount(0);
	}

	public void loadTblSanPham() {
		clearTableSanPham();
		DefaultTableModel dtm = (DefaultTableModel) jTableDSSP.getModel();
		try {
			out.println("QLBH");
			out.println("getAllSach");
			dtm = (DefaultTableModel) jTableDSSP.getModel();
			String listObject = sc.nextLine();
			InstanceCreator<Sach> sachInstanceCreator = new InstanceCreator<Sach>() {
				@Override
				public Sach createInstance(Type type) {
					return new Sach();
				}
			};
			Gson gsonSach = new GsonBuilder().registerTypeAdapter(Sach.class, sachInstanceCreator).create();
			List<Sach> listSach = gsonSach.fromJson(listObject, new TypeToken<List<Sach>>() {
			}.getType());
			for (SanPham s : listSach) {
				if (s.getMaSP().startsWith("S")) {
					String Sach = "Sách";
					Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), Sach,
							s.getSoLuongTK(), s.getDonGiaBan() };
					dtm.addRow(rowData);
				}

			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		try {
			out.println("QLBH");
			out.println("getAllVPP");
			dtm = (DefaultTableModel) jTableDSSP.getModel();

			String listObject = sc.nextLine();
			InstanceCreator<VPP> sachInstanceCreator = new InstanceCreator<VPP>() {

				@Override
				public VPP createInstance(Type type) {
					return new VPP();
				}
			};

			Gson gsonSach = new GsonBuilder().registerTypeAdapter(VPP.class, sachInstanceCreator).create();

			List<VPP> listSach = gsonSach.fromJson(listObject, new TypeToken<List<VPP>>() {
			}.getType());
			for (VPP s : listSach) {
				if (s.getMaSP().startsWith("H")) {
					String vpp = "VPP";
					Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), vpp, s.getSoLuongTK(), s.getDonGiaBan() };
					dtm.addRow(rowData);
				}

			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		out.flush();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		buttonGroup = new javax.swing.ButtonGroup();
		jPanel1 = new javax.swing.JPanel();
		jPanel4 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jTextFieldDinhMuc = new javax.swing.JTextField();
		jRadioButtonAll = new javax.swing.JRadioButton();
		jRadioButtonDuoi = new javax.swing.JRadioButton();
		jRadioButtonHet = new javax.swing.JRadioButton();
		jRadioButtonTren = new javax.swing.JRadioButton();
		jRadioButtonCon = new javax.swing.JRadioButton();
		btnThongKe = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		jPanel6 = new javax.swing.JPanel();
		jPanel8 = new javax.swing.JPanel();
		jLabel5 = new javax.swing.JLabel();
		jLabelTongHD = new javax.swing.JLabel();
		jButtonBanCham = new javax.swing.JButton();
		jButtonBanChay = new javax.swing.JButton();
		jPanel9 = new javax.swing.JPanel();
		jPanelDSHD = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTableDSHD = new javax.swing.JTable();
		jPanel2 = new javax.swing.JPanel();
		jPanelDSSP = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableDSSP = new javax.swing.JTable();

		setBackground(new java.awt.Color(255, 255, 255));
		setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jPanel1.setBackground(new java.awt.Color(255, 255, 255));
		jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jPanel4.setBackground(new java.awt.Color(255, 255, 204));

		jLabel1.setBackground(new java.awt.Color(102, 102, 255));
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setText("TỒN KHO");

		jLabel4.setText("Định mức");

		buttonGroup.add(jRadioButtonAll);
		jRadioButtonAll.setText("Tất cả");

		buttonGroup.add(jRadioButtonDuoi);
		jRadioButtonDuoi.setText("Dưới định mức");

		buttonGroup.add(jRadioButtonHet);
		jRadioButtonHet.setText("Hết hàng");

		buttonGroup.add(jRadioButtonTren);
		jRadioButtonTren.setText("Trên định mức");

		buttonGroup.add(jRadioButtonCon);
		jRadioButtonCon.setText("Còn hàng");

		btnThongKe.setBackground(new java.awt.Color(255, 153, 0));
		btnThongKe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnThongKe.setForeground(new java.awt.Color(255, 255, 255));
		btnThongKe.setText("THỐNG KÊ");
		btnThongKe.setBorder(null);
		btnThongKe.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThongKeActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE)
				.addGroup(jPanel4Layout.createSequentialGroup().addGap(31, 31, 31).addGroup(jPanel4Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel4Layout.createSequentialGroup()
								.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jRadioButtonDuoi).addComponent(jRadioButtonTren))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jRadioButtonHet)
										.addGroup(jPanel4Layout.createSequentialGroup().addComponent(jRadioButtonCon)
												.addGap(18, 18, 18).addComponent(btnThongKe,
														javax.swing.GroupLayout.PREFERRED_SIZE, 129,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGap(16, 16, 16))
						.addGroup(jPanel4Layout.createSequentialGroup()
								.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addComponent(jTextFieldDinhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 198,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jRadioButtonAll, javax.swing.GroupLayout.PREFERRED_SIZE, 83,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(68, Short.MAX_VALUE)))));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup()
						.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel4)
								.addComponent(jTextFieldDinhMuc, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jRadioButtonAll))
						.addGap(18, 18, 18)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jRadioButtonDuoi).addComponent(jRadioButtonHet))
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel4Layout.createSequentialGroup().addGap(18, 18, 18)
										.addGroup(jPanel4Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jRadioButtonCon).addComponent(jRadioButtonTren,
														javax.swing.GroupLayout.PREFERRED_SIZE, 21,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanel4Layout.createSequentialGroup()
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(15, 15, 15)))));

		jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 490, 180));

		jPanel3.setBackground(new java.awt.Color(255, 255, 255));
		jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jPanel6.setBackground(new java.awt.Color(255, 255, 255));
		jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jPanel8.setBackground(new java.awt.Color(255, 255, 204));

		jLabel5.setBackground(new java.awt.Color(102, 102, 255));
		jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel5.setText("TỔNG SỐ HOÁ ĐƠN");

		jLabelTongHD.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
		jLabelTongHD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabelTongHD.setText("0");

		javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
		jPanel8.setLayout(jPanel8Layout);
		jPanel8Layout.setHorizontalGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
						290, Short.MAX_VALUE)
				.addGroup(jPanel8Layout.createSequentialGroup().addContainerGap().addComponent(jLabelTongHD,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel8Layout.setVerticalGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel8Layout.createSequentialGroup()
						.addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jLabelTongHD, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)));

		jPanel6.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 290, 180));

		jButtonBanCham.setText("TOP 10 SẢN PHẨM BÁN CHẬM");
		jButtonBanCham.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonBanChamActionPerformed(evt);
			}
		});
		jPanel6.add(jButtonBanCham, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 560, 40));

		jButtonBanChay.setText("TOP 10 SẢN PHẨM BÁN CHẠY");
		jButtonBanChay.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonBanChayActionPerformed(evt);
			}
		});
		jPanel6.add(jButtonBanChay, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 560, 40));

		jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 240));

		jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jPanelDSHD.setBorder(javax.swing.BorderFactory.createTitledBorder("THÔNG TIN HOÁ ĐƠN"));

		jTableDSHD.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã hoá đơn", "Ngày lập hoá đơn", "Nhân viên", "Khách hàng", "Thành tiền" }));
		jTableDSHD.setRowHeight(30);
		jScrollPane2.setViewportView(jTableDSHD);

		javax.swing.GroupLayout jPanelDSHDLayout = new javax.swing.GroupLayout(jPanelDSHD);
		jPanelDSHD.setLayout(jPanelDSHDLayout);
		jPanelDSHDLayout
				.setHorizontalGroup(
						jPanelDSHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanelDSHDLayout.createSequentialGroup().addContainerGap()
										.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1233,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(41, Short.MAX_VALUE)));
		jPanelDSHDLayout.setVerticalGroup(jPanelDSHDLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelDSHDLayout.createSequentialGroup().addComponent(jScrollPane2,
						javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 75, Short.MAX_VALUE)));

		jPanel9.add(jPanelDSHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 410));

		jPanel3.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 1290, 410));

		jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

		add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 240));

		jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jPanelDSSP.setBorder(javax.swing.BorderFactory.createTitledBorder("THÔNG TIN HOÁ ĐƠN"));

		jTableDSSP.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã sản phẩm", "Tên sản phẩm", "Nhà cung cấp", "Loại sản phẩm", "Số lượng", "Đơn giá bán" }));
		jTableDSSP.setRowHeight(30);
		jScrollPane1.setViewportView(jTableDSSP);

		javax.swing.GroupLayout jPanelDSSPLayout = new javax.swing.GroupLayout(jPanelDSSP);
		jPanelDSSP.setLayout(jPanelDSSPLayout);
		jPanelDSSPLayout
				.setHorizontalGroup(
						jPanelDSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanelDSSPLayout.createSequentialGroup().addContainerGap()
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1233,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(41, Short.MAX_VALUE)));
		jPanelDSSPLayout.setVerticalGroup(jPanelDSSPLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelDSSPLayout.createSequentialGroup().addComponent(jScrollPane1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 75, Short.MAX_VALUE)));

		jPanel2.add(jPanelDSSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 410));

		add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 1300, 410));
	}// </editor-fold>//GEN-END:initComponents

	private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThongKeActionPerformed
		// TODO add your handling code here:
		try {
			int dinhMuc = 0;
			if (jRadioButtonAll.isSelected()) {
				loadTblSanPham();
				return;
			}

			out.println("QLSP");
			out.println("getAllSP");
			String listObject = sc.nextLine();

			dtm = (DefaultTableModel) jTableDSSP.getModel();

			InstanceCreator<Sach> sachInstanceCreator = new InstanceCreator<Sach>() {
				@Override
				public Sach createInstance(Type type) {
					return new Sach();// Vì các cột trong bảng chỉ có thuộc tính trừu tượng của SanPham
										// nên ta có thể lấy lớp con của nó là Sach hoặc VPP đều được
				}
			};
			Gson gsonSach = new GsonBuilder().registerTypeAdapter(Sach.class, sachInstanceCreator).create();

			List<Sach> listSP = gsonSach.fromJson(listObject, new TypeToken<List<Sach>>() {
			}.getType());

			if (jRadioButtonTren.isSelected()) {
				if (jTextFieldDinhMuc.getText().equals("")) {
					JOptionPane.showMessageDialog(null, "Bạn chưa nhập định mức cần thống kê");
				} else {
					dinhMuc = Integer.parseInt(jTextFieldDinhMuc.getText());
					clearTableSanPham();
					for (SanPham sp : listSP) {
						if (sp.getMaSP().startsWith("S")) {
							if (sp.getSoLuongTK() > dinhMuc) {
								Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
										"Sách", sp.getSoLuongTK(), sp.getDonGiaBan() };
								dtm.addRow(rowData);
							}
						}else {
							if (sp.getSoLuongTK() > dinhMuc) {
								Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
										"Văn phòng phẩm", sp.getSoLuongTK(), sp.getDonGiaBan() };
								dtm.addRow(rowData);
							}
						}
					}
				}
			}
			
            if (jRadioButtonDuoi.isSelected()) {
                if (jTextFieldDinhMuc.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Bạn chưa nhập định mức cần thống kê");
                } else {
                    dinhMuc = Integer.parseInt(jTextFieldDinhMuc.getText());
                    clearTableSanPham();
                    for (SanPham sp : listSP) {
						if (sp.getMaSP().startsWith("S")) {
							if (sp.getSoLuongTK() < dinhMuc) {
								Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
										"Sách", sp.getSoLuongTK(), sp.getDonGiaBan() };
								dtm.addRow(rowData);
							}
						}else {
							if (sp.getSoLuongTK() < dinhMuc) {
								Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
										"Văn phòng phẩm", sp.getSoLuongTK(), sp.getDonGiaBan() };
								dtm.addRow(rowData);
							}
						}
					}
                }
            }
            if (jRadioButtonCon.isSelected()) {
                clearTableSanPham();
                for (SanPham sp : listSP) {
					if (sp.getMaSP().startsWith("S")) {
						if (sp.getSoLuongTK() > 0) {
							Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
									"Sách", sp.getSoLuongTK(), sp.getDonGiaBan() };
							dtm.addRow(rowData);
						}
					}else {
						if (sp.getSoLuongTK() > 0) {
							Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
									"Văn phòng phẩm", sp.getSoLuongTK(), sp.getDonGiaBan() };
							dtm.addRow(rowData);
						}
					}
				}
            }
            
            if (jRadioButtonHet.isSelected()) {
                clearTableSanPham();
                for (SanPham sp : listSP) {
					if (sp.getMaSP().startsWith("S")) {
						if (sp.getSoLuongTK() == 0) {
							Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
									"Sách", sp.getSoLuongTK(), sp.getDonGiaBan() };
							dtm.addRow(rowData);
						}
					}else {
						if (sp.getSoLuongTK() == 0) {
							Object[] rowData = { sp.getMaSP(), sp.getTenSP(), sp.getNhaCungCap().getTenNCC(),
									"Văn phòng phẩm", sp.getSoLuongTK(), sp.getDonGiaBan() };
							dtm.addRow(rowData);
						}
					}
				}
            }
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Định mức là một con số");
		}
	}// GEN-LAST:event_btnThongKeActionPerformed

	private void jButtonBanChayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonBanChayActionPerformed
		try {
			clearTableSanPham();
			out.println("QLSP");
			out.println("top10SPBanChay");
			String listObject = sc.nextLine();

			dtm = (DefaultTableModel) jTableDSSP.getModel();

			InstanceCreator<Sach> sachInstanceCreator = new InstanceCreator<Sach>() {
				@Override
				public Sach createInstance(Type type) {
					return new Sach();// Vì các cột trong bảng chỉ có thuộc tính trừu tượng của SanPham
										// nên ta có thể lấy lớp con của nó là Sach hoặc VPP đều được
				}
			};
			Gson gsonSach = new GsonBuilder().registerTypeAdapter(Sach.class, sachInstanceCreator).create();

			List<Sach> listSP = gsonSach.fromJson(listObject, new TypeToken<List<Sach>>() {
			}.getType());
			for (SanPham s : listSP) {
				if (s.getMaSP().startsWith("S")) {
					Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), "Sách",
							s.getSoLuongTK(), s.getDonGiaBan() };
					dtm.addRow(rowData);
				} else {
					Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), "Văn phòng phẩm",
							s.getSoLuongTK(), s.getDonGiaBan() };
					dtm.addRow(rowData);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		out.flush();
	}// GEN-LAST:event_jButtonBanChayActionPerformed

	private void jButtonBanChamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonBanChamActionPerformed
		try {
			clearTableSanPham();
			out.println("QLSP");
			out.println("top10SPBanCham");
			String listObject = sc.nextLine();

			dtm = (DefaultTableModel) jTableDSSP.getModel();

			InstanceCreator<Sach> sachInstanceCreator = new InstanceCreator<Sach>() {
				@Override
				public Sach createInstance(Type type) {
					return new Sach();// Vì các cột trong bảng chỉ có thuộc tính trừu tượng của SanPham
										// nên ta có thể lấy lớp con của nó là Sach hoặc VPP đều được
				}
			};
			Gson gsonSach = new GsonBuilder().registerTypeAdapter(Sach.class, sachInstanceCreator).create();

			List<Sach> listSP = gsonSach.fromJson(listObject, new TypeToken<List<Sach>>() {
			}.getType());
			for (SanPham s : listSP) {
				if (s.getMaSP().startsWith("S")) {
					Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), "Sách",
							s.getSoLuongTK(), s.getDonGiaBan() };
					dtm.addRow(rowData);
				} else {
					Object[] rowData = { s.getMaSP(), s.getTenSP(), s.getNhaCungCap().getTenNCC(), "Văn phòng phẩm",
							s.getSoLuongTK(), s.getDonGiaBan() };
					dtm.addRow(rowData);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		out.flush();
	}// GEN-LAST:event_jButtonBanChamActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnThongKe;
	private javax.swing.ButtonGroup buttonGroup;
	private javax.swing.JButton jButtonBanCham;
	private javax.swing.JButton jButtonBanChay;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabelTongHD;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel8;
	private javax.swing.JPanel jPanel9;
	private javax.swing.JPanel jPanelDSHD;
	private javax.swing.JPanel jPanelDSSP;
	private javax.swing.JRadioButton jRadioButtonAll;
	private javax.swing.JRadioButton jRadioButtonCon;
	private javax.swing.JRadioButton jRadioButtonDuoi;
	private javax.swing.JRadioButton jRadioButtonHet;
	private javax.swing.JRadioButton jRadioButtonTren;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTable jTableDSHD;
	private javax.swing.JTable jTableDSSP;
	private javax.swing.JTextField jTextFieldDinhMuc;
	// End of variables declaration//GEN-END:variables
}
