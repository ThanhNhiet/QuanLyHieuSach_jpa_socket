/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Gui;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.PrimitiveIterator;
import java.util.Scanner;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import dao.NhaCungCapDAO;
import dao.NhanVienDAO;
import entity.NhaCungCap;
import entity.NhanVien;

/**
 *
 * @author LENOVO
 */
public class QuanLyNhaCungCap extends javax.swing.JPanel {
    private Socket socket;
//    private NhaCungCapDAO nhaCC_DAO = new NhaCungCapDAO();
    private boolean isThemActive = false;
    private boolean isSuaActive = false;

    /**
     * Creates new form Tab_Sach
     */
    public QuanLyNhaCungCap(Socket socket) {
        initComponents();
        this.socket = socket;
        loadtableNhaCC();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //lấy dữ liệu từ database và đổ vào table
    public void clearTableNhaCC() {
        DefaultTableModel dtm = (DefaultTableModel) jtable_NhaCungCap.getModel();
        dtm.setRowCount(0);
    }

    @SuppressWarnings("unchecked")
    public void clearTable() {
        DefaultTableModel dtm = (DefaultTableModel) jtable_NhaCungCap.getModel();
        dtm.setRowCount(0);
    }

    private boolean validateData() {
        String sdt = txt_SDT.getText().trim();
        String email = txt_Email.getText().trim();
        String tennhacc = txt_TenNhaCC.getText().trim();
        String manhacc = txt_MaNCC.getText().trim();
        String diachi = txt_DiaChi.getText().trim();

        if (txt_DiaChi.getText().equals("") || txt_TenNhaCC.getText().equals("") || txt_MaNCC.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin");
            return false;
        }

        if (!(email.length() > 0 && email.matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+(\\.[a-zA-Z0-9]+)$"))) {
            JOptionPane.showMessageDialog(this, "Email sai định dạng");
            txt_Email.requestFocus();
            return false;
        }
        if (!(sdt.length() > 0 && sdt.matches("^[0-9]{10,11}$"))) {
            JOptionPane.showMessageDialog(txt_SDT, "Số điện thoại yêu cầu phải đủ 10 hoặc 11 số");
            txt_SDT.requestFocus();
            return false;
        }

        return true;
    }

    private void themNhaCC() throws SQLException {
        if (!validateData()) {
            return;
        }
        String mancc = txt_MaNCC.getText();
        String tenncc = txt_TenNhaCC.getText();
        String email = txt_Email.getText();
        String sdt = txt_SDT.getText();
        String diachi = txt_DiaChi.getText();
        try {
            PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
            pw.println("supplier");
            pw.println("add");

            String json = "{\"maNCC\":\"" + mancc + "\",\"tenNCC\":\"" + tenncc + "\",\"diaChi\":\"" + diachi + "\",\"SoDienThoai\":\"" + sdt + "\",\"email\":\"" + email + "\"}";
            pw.println(json);

            String response = new Scanner(socket.getInputStream()).nextLine();
            if (response.equals("Email exists")) {
                JOptionPane.showMessageDialog(null, "Email đã tồn tại trong hệ thống. Vui lòng sử dụng email khác");
                return;
            }
            if (response.equals("Phone exists")) {
                JOptionPane.showMessageDialog(null, "Số điện thoại đã tồn tại trong hệ thống. Vui lòng sử dụng sdt khác");
                return;
            }
            if (response.equals("Add success")) {
                loadtableNhaCC();
                clearInput();
                huyThaoTac();
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại");
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
//        if (nhaCC_DAO.getNhaCungCapByGmail(email) != null) {
//            JOptionPane.showMessageDialog(null, "Email đã tồn tại trong hệ thống. Vui lòng sử dụng email khác");
//            return;
//        }
//        if (nhaCC_DAO.getNhaCungCapBySdt(sdt) != null) {
//            JOptionPane.showMessageDialog(null, "Số điện thoại đã tồn tại trong hệ thống. Vui lòng sử dụng sdt khác");
//            return;
//        }
//        NhaCungCap nhaCC = new NhaCungCap(mancc, tenncc, diachi, sdt, email);
//        if (nhaCC_DAO.addNhaCungCap(nhaCC) != -1) {
//            loadtableNhaCC();
//            clearInput();
//            huyThaoTac();
//            JOptionPane.showMessageDialog(null, "Thêm thành công");
//            return;
//        } else {
//            JOptionPane.showMessageDialog(null, "Thêm thất bại");
//        }
    }

    private void thongTinnhaCC(NhaCungCap nhaCC) {
        txt_MaNCC.setText(nhaCC.getMaNCC());
        txt_Email.setText(nhaCC.getEmail());
        txt_DiaChi.setText(nhaCC.getDiaChi());
        txt_SDT.setText(nhaCC.getSoDienThoai());
        txt_TenNhaCC.setText(nhaCC.getTenNCC());
    }

    public void TimKiem() {
        jtable_NhaCungCap.clearSelection();
        clearTable();
        DefaultTableModel dtm = (DefaultTableModel) jtable_NhaCungCap.getModel();
        String timKiem = "";
        if (txt_TimKiem.getText().length() > 0) {
            timKiem = txt_TimKiem.getText();
        }
        try {
            PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
            pw.println("supplier");
            pw.println("getAll");
            Scanner sc = new Scanner(socket.getInputStream());
            String list = sc.nextLine();
            // convert json to list
            ArrayList<NhaCungCap> listNCC = new ArrayList<>();
            listNCC = new Gson().fromJson(list, new TypeToken<ArrayList<NhaCungCap>>() {
            }.getType());
            for (NhaCungCap ncc : listNCC) {
                if (ncc.getMaNCC().toLowerCase().contains(timKiem.toLowerCase())
                        || ncc.getTenNCC().toLowerCase().contains(timKiem.toLowerCase())
                        || ncc.getSoDienThoai().toLowerCase().contains(timKiem.toLowerCase())) {
                    Object[] rowData = {ncc.getMaNCC(), ncc.getTenNCC(), ncc.getDiaChi(), ncc.getSoDienThoai(), ncc.getEmail()};
                    dtm.addRow(rowData);
                }
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
//        ArrayList<NhaCungCap> listNCC = nhaCC_DAO.getAllNhaCungCap();
//        for (NhaCungCap ncc : listNCC) {
//            if (ncc.getMaNCC().toLowerCase().contains(timKiem.toLowerCase())
//                    || ncc.getTenNCC().toLowerCase().contains(timKiem.toLowerCase())
//                    || ncc.getSoDienThoai().toLowerCase().contains(timKiem.toLowerCase())) {
//                Object[] rowData = {ncc.getMaNCC(), ncc.getTenNCC(), ncc.getDiaChi(), ncc.getSoDienThoai(), ncc.getEmail()};
//                dtm.addRow(rowData);
//            }
//
//        }
    }

    private void huyThaoTac() {
        clearInput();
        isSuaActive = false;
        isThemActive = false;
        btn_Them.setText("THÊM");
        btn_Sua.setText("SỬA");
        btn_Them.setEnabled(true);
        btn_Sua.setEnabled(true);
        btn_Luu.setEnabled(false);
        txt_MaNCC.setText("");
        txt_Email.setText("");
        txt_DiaChi.setText("");
        txt_SDT.setText("");
        txt_TenNhaCC.setText("");
        isInputActive(false);
        jtable_NhaCungCap.clearSelection();

    }

    public void loadtableNhaCC() {
        clearTableNhaCC();
//        NhaCungCapDAO nvdao = new NhaCungCapDAO();
        DefaultTableModel dtm = (DefaultTableModel) jtable_NhaCungCap.getModel();
        try {
            PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
            pw.println("supplier");
            pw.println("getAll");
            Scanner sc = new Scanner(socket.getInputStream());
            String list = sc.nextLine();
            // convert json to list
            ArrayList<NhaCungCap> listNCC = new ArrayList<>();
            listNCC = new Gson().fromJson(list, new TypeToken<ArrayList<NhaCungCap>>() {
            }.getType());
            for (NhaCungCap ncc : listNCC) {
                Object[] rowData = {ncc.getMaNCC(), ncc.getTenNCC(), ncc.getDiaChi(), ncc.getSoDienThoai(), ncc.getEmail()};
                dtm.addRow(rowData);
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
//        ArrayList<NhaCungCap> listNhaCC = nhaCC_DAO.getAllNhaCungCap();
//        for (NhaCungCap nhacc : listNhaCC) {
//            Object[] rowData = {nhacc.getMaNCC(), nhacc.getTenNCC(), nhacc.getDiaChi(), nhacc.getSoDienThoai(), nhacc.getEmail()};
//            dtm.addRow(rowData);
//        }
    }

    private void clearInput() {
        txt_Email.setText("");
        txt_DiaChi.setText("");
        txt_SDT.setText("");
        txt_TimKiem.setText("");
        txt_TenNhaCC.setText("");
    }

    private void capNhatNhaCC() {
        if (!validateData()) {
            return;
        }
        try {
            PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
            pw.println("supplier");
            pw.println("update");

            String json = "{\"maNCC\":\"" + txt_MaNCC.getText() + "\",\"tenNCC\":\"" + txt_TenNhaCC.getText() + "\",\"diaChi\":\"" + txt_DiaChi.getText() + "\",\"soDienThoai\":\"" + txt_SDT.getText() + "\",\"email\":\"" + txt_Email.getText() + "\"}";
            pw.println(json);

            String response = new Scanner(socket.getInputStream()).nextLine();
            if (response.equals("Update success")) {
                loadtableNhaCC();
                clearInput();
                huyThaoTac();
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                return;
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
//        NhaCungCap nhaCC = nhaCC_DAO.getNhaCungCap((String) jtable_NhaCungCap.getValueAt(jtable_NhaCungCap.getSelectedRow(), 0));
//        nhaCC.setEmail(txt_Email.getText());
//        nhaCC.setTenNCC(txt_TenNhaCC.getText());
//        nhaCC.setSoDienThoai(txt_SDT.getText());
//        nhaCC.setDiaChi(txt_DiaChi.getText());
//        if (nhaCC_DAO.updateNhaCungCap(nhaCC) != -1) {
//            JOptionPane.showMessageDialog(null, "Cập nhật thành công");
//            loadtableNhaCC();
//            clearInput();
//            huyThaoTac();
//            return;
//        }
        JOptionPane.showMessageDialog(null, "Cập nhật thất bại");

    }

    private void isInputActive(boolean check) {
        txt_MaNCC.setEnabled(!check);
        txt_Email.setEnabled(check);
        txt_DiaChi.setEnabled(check);
        txt_SDT.setEnabled(check);
        txt_TenNhaCC.setEnabled(check);
    }

    private void isThemNhaCCClicked(boolean check) {
        isThemActive = check;
        isSuaActive = !check;
        if (isThemActive) {
//            NhaCungCap NhaCC = new NhaCungCap();
//            txt_MaNCC.setText(NhaCC.auto_ID());
            try {
                PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
                pw.println("supplier");
                pw.println("generateId");
                String id = new Scanner(socket.getInputStream()).nextLine();
                txt_MaNCC.setText(id);
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
            txt_MaNCC.setEnabled(false);
            btn_Them.setText("Huỷ");
            btn_Sua.setEnabled(false);
            txt_TimKiem.setEnabled(false);
        } else if (isSuaActive) {
            btn_Sua.setText("Huỷ");
            btn_Them.setEnabled(false);
            txt_TimKiem.setEnabled(false);

        }
        btn_Luu.setEnabled(true);
        isInputActive(true);
    }

    // valid data
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel3.setBounds(440, 20, 120, 20);
        jLabel4 = new javax.swing.JLabel();
        jLabel4.setBounds(10, 120, 140, 20);
        jLabel6 = new javax.swing.JLabel();
        jLabel6.setBounds(10, 70, 140, 30);
        jLabel7 = new javax.swing.JLabel();
        jLabel7.setBounds(440, 60, 80, 30);
        txt_Email = new javax.swing.JTextField();
        txt_Email.setBounds(160, 110, 260, 40);
        txt_DiaChi = new javax.swing.JTextField();
        txt_DiaChi.setBounds(570, 60, 317, 40);
        jLabel9 = new javax.swing.JLabel();
        jLabel9.setBounds(10, 20, 140, 30);
        txt_SDT = new javax.swing.JTextField();
        txt_SDT.setBounds(570, 10, 317, 40);
        btn_Them = new javax.swing.JButton();
        btn_Them.setBounds(1120, 10, 120, 40);
        btn_Luu = new javax.swing.JButton();
        btn_Luu.setBounds(957, 10, 120, 40);
        btn_Sua = new javax.swing.JButton();
        btn_Sua.setBounds(957, 55, 120, 40);
        btn_LamMoi = new javax.swing.JButton();
        btn_LamMoi.setBounds(1120, 55, 120, 40);
        txt_MaNCC = new javax.swing.JTextField();
        txt_MaNCC.setBounds(160, 10, 260, 40);
        txt_TenNhaCC = new javax.swing.JTextField();
        txt_TenNhaCC.setBounds(160, 60, 260, 40);
        jLabel10 = new javax.swing.JLabel();
        jLabel10.setBounds(440, 110, 70, 40);
        txt_TimKiem = new javax.swing.JTextField();
        txt_TimKiem.setBounds(570, 111, 317, 40);
        btn_TimKiem = new javax.swing.JButton();
        btn_TimKiem.setBounds(957, 108, 120, 40);
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_NhaCungCap = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1260, 530));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("SỐ DIỆN THOẠI:");
        jPanel1.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("EMAIL:");
        jPanel1.add(jLabel4);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("TÊN NCC:");
        jPanel1.add(jLabel6);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("ĐỊA CHỈ:");
        jPanel1.add(jLabel7);
        jPanel1.add(txt_Email);
        jPanel1.add(txt_DiaChi);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("MÃ NCC:");
        jPanel1.add(jLabel9);
        jPanel1.add(txt_SDT);

        btn_Them.setBackground(new java.awt.Color(255, 102, 102));
        btn_Them.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Them.setForeground(new java.awt.Color(255, 255, 255));
        btn_Them.setIcon(new ImageIcon("src/main/java/Img/Add-icon.png")); // NOI18N
        btn_Them.setText("THÊM");
        btn_Them.setBorder(null);
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               btn_themActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Them);
        jtable_NhaCungCap.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				tbl_danhsachNhaCCMousePressed(e);
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
		});
        btn_Luu.setBackground(new java.awt.Color(255, 51, 102));
        btn_Luu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Luu.setForeground(new java.awt.Color(255, 255, 255));
        btn_Luu.setIcon(new ImageIcon("src/main/java/Img/icons8_downloads_30px.png")); // NOI18N
        btn_Luu.setText("LƯU");
        btn_Luu.setBorder(null);
        btn_Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               try {
				btn_luuActionPerformed(evt);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            }
        });
        jPanel1.add(btn_Luu);

        btn_Sua.setBackground(new java.awt.Color(153, 255, 204));
        btn_Sua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Sua.setForeground(new java.awt.Color(255, 255, 255));
        btn_Sua.setIcon(new ImageIcon("src/main/java/Img/icons8_maintenance_30px.png")); // NOI18N
        btn_Sua.setText("SỬA");
        btn_Sua.setBorder(null);
        btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_capNhatActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Sua);

        btn_LamMoi.setBackground(new java.awt.Color(102, 255, 102));
        btn_LamMoi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_LamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btn_LamMoi.setIcon(new ImageIcon("src/main/java/Img/Refresh-icon.png")); // NOI18N
        btn_LamMoi.setText("LÀM MỚI");
        btn_LamMoi.setBorder(null);
        btn_LamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               try {
            	  
				btn_LamMoiActionPerformed(evt);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            }
        });
        jPanel1.add(btn_LamMoi);
        jPanel1.add(txt_MaNCC);
        jPanel1.add(txt_TenNhaCC);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 0));
        jLabel10.setText("Tìm kiếm:");
        jPanel1.add(jLabel10);

        txt_TimKiem.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jPanel1.add(txt_TimKiem);

        btn_TimKiem.setBackground(new java.awt.Color(255, 153, 0));
        btn_TimKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_TimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btn_TimKiem.setText("TÌM KIẾM");
        btn_TimKiem.setBorder(null);
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               btn_timNhaCCActionPerformed(evt);
            }
        });
        jPanel1.add(btn_TimKiem);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1300, 170));

        jtable_NhaCungCap.setModel(new DefaultTableModel(
        	new Object[][] {
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        	},
        	new String[] {
        		"MÃ NHÀ CUNG CẤP", "TÊN NHÀ CUNG CẤP", "ĐỊA CHỈ", "SỐ ĐIỆN THOẠI","EMAIL"
        	}
        ));
        jScrollPane1.setViewportView(jtable_NhaCungCap);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 1300, 440));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ NHÀ CUNG CẤP");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn1ActionPerformed
    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {
        if (btn_Them.getText().equals("THÊM")) {
            isThemActive = true;
            isThemNhaCCClicked(isThemActive);
            clearInput();
        } else if (btn_Them.getText().equals("Huỷ")) {
            huyThaoTac();
            txt_TimKiem.setEnabled(true);
        }
    }

    private void btn_timNhaCCActionPerformed(java.awt.event.ActionEvent evt) {
        TimKiem();

    }

    private void btn_capNhatActionPerformed(java.awt.event.ActionEvent evt) {
        if (jtable_NhaCungCap.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dữ liệu để cập nhật");
            return;
        }

        if (btn_Sua.getText().equals("SỬA")) {
            isThemActive = false;
            isThemNhaCCClicked(isThemActive);
        } else if (btn_Sua.getText().equals("Huỷ")) {
            huyThaoTac();
            txt_TimKiem.setEnabled(true);
        }
    }

    private void btn_luuActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        if (isThemActive) {
            themNhaCC();
            txt_TimKiem.setEnabled(true);
        } else if (isSuaActive) {
            capNhatNhaCC();
            txt_TimKiem.setEnabled(true);
        }
    }

    private void tbl_danhsachNhaCCMousePressed(MouseEvent evt) {
        String id = (String) jtable_NhaCungCap.getValueAt(jtable_NhaCungCap.getSelectedRow(), 0);
        try {
            PrintWriter pw = new PrintWriter(socket.getOutputStream(), true);
            pw.println("supplier");
            pw.println("getById");
            pw.println(id);
            String response = new Scanner(socket.getInputStream()).nextLine();
            if (response.equals("null")) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy nhà cung cấp");
                return;
            }
            NhaCungCap ncc = new Gson().fromJson(response, NhaCungCap.class);
            thongTinnhaCC(ncc);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
//        NhaCungCap nhaCC = nhaCC_DAO.getNhaCungCap(id);
//        if (nhaCC == null) {
//            System.out.println("Không tìm thấy nhà cung cấp");
//            return;
//        }
//        thongTinnhaCC(nhaCC);
    }

    private void btn_LamMoiActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {

        clearInput();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_Them;
    private javax.swing.JButton btn_LamMoi;
    private javax.swing.JButton btn_Luu;
    private javax.swing.JButton btn_Sua;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtable_NhaCungCap;
    private javax.swing.JTextField txt_TimKiem;
    private javax.swing.JTextField txt_Email;
    private javax.swing.JTextField txt_SDT;
    private javax.swing.JTextField txt_MaNCC;
    private javax.swing.JTextField txt_DiaChi;
    private javax.swing.JTextField txt_TenNhaCC;
    // End of variables declaration//GEN-END:variables
}
